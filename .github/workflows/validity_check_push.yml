name: Validity Checks (Push)

on:
    push:
        branches: [patch/**,  feature/**]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug


jobs:
  Setup:
    name: '${{ matrix.os }}: build'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: | 
        cmake -E make_directory ${{runner.workspace}}/build
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Setup testing Network (Linux)
      # Create a testing network called wlan0
      if: runner.os == 'Linux'
      run: |
        docker network create --opt com.docker.network.bridge.name=nat test-net --subnet "192.168.0.0/24"
        ifconfig
        
    - name: Attempt Permissions fix
      if: runner.os == 'Linux'
      run: |
        sudo chmod +666 /dev/uinput

    - name: Setup testing Network (Windows)
      # Create a testing network called wlan0
      if: runner.os == 'Windows'
      run: |
        docker network create -d "nat" --subnet "192.168.0.0/24" my_nat
        ipconfig /all

  Build:
    name: '${{ matrix.os }}: build'
    needs: Setup
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - name: Build Check
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE
    
  Test:
    name: '${{ matrix.os }}: build'
    needs: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - name: Unit Testing
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE --verbose
