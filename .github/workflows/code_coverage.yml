name: Test Coverage

on:
  pull_request:
    branches:
      [version/**, master]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  run_code_cover:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
#    - name: Set up Python 3.8
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.8
        
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install gcovr
#       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
#    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
#      run: cmake -E make_directory ${{runner.workspace}}/build

#    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
#      shell: bash
#      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
#      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

#    - name: Build
#      working-directory: ${{runner.workspace}}/build
#      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
#      run: cmake --build . --config $BUILD_TYPE --DRUN_COVER=true
      
#    - name: Run
#      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
#      run: make cov
  
